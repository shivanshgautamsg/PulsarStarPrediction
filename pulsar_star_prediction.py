# -*- coding: utf-8 -*-
"""Pulsar Star Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sOBIpe-iioglIuBNxlU_0QZemqIGzElU
"""

from google.colab import files
uploaded = files.upload()

import numpy as np
import pandas as pd

train_df = pd.read_csv('pulsar-star-prediction-train.csv')
test_df = pd.read_csv('pulsar-star-prediction-test.csv')

train_df.head()

test_df.head()

print(train_df.shape)
print(test_df.shape)

# Check for the missing values in the 'train_df' DataFrame.
train_df.isnull().sum()

# Check for the missing values in the 'test_df' DataFrame.
test_df.isnull().sum()

# Print the count of the '0' and '1' classes in the 'train_df' DataFrame.
train_df['target_class'].value_counts()

# Print the count of the '0' and '1' classes in the 'test_df' DataFrame.
test_df['target_class'].value_counts()

# Get the feature variables from the 'train_df' DataFrame.
x_train = train_df.iloc[:, 1:]
# Display the first 5 rows of the 'x_train' DataFrame.
x_train.head()

# Get the feature variables from the 'test_df' DataFrame.
x_test = test_df.iloc[:, 1:]
# Display the first 5 rows of the 'x_test' DataFrame.
x_test.head()

# Get the target variable from the 'train_df' DataFrame.
y_train = train_df.iloc[:, 0]
# Display the first 5 rows of the 'y_train' Pandas series.
y_train.head()

# Get the target variable from the 'test_df' DataFrame.
y_test = test_df.iloc[:, 0]
# Display the first 5 rows of the 'y_test' Pandas series.
y_test.head()

# XGBoost Classifier model
import xgboost as xg
# confusion_matrix and classification_report modules.
from sklearn.metrics import confusion_matrix, classification_report

# Predict the target variable based on the feature variables of the test dataframe.
xg_clf=xg.XGBClassifier()
xg_clf.fit(x_train,y_train)
predict=xg_clf.predict(x_test)
print(predict)

# confusion matrix and classification report
print(confusion_matrix(y_test,predict))
print()
print()
print(classification_report(y_test,predict))